name: Build and Package BuildKit

on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: build-release
  cancel-in-progress: true

jobs:
  build-wheels:
    name: Build on ${{ matrix.os }} / Python ${{ matrix.python-version }}
    env:
      PYTHONUTF8: "1"
      PYTHONIOENCODING: "utf-8"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.12", "3.13"]

    steps:
      - name: 📥 Checkout source code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: 📦 Create virtualenv
        run: |
          python -m venv venv
          echo "PYTHON_EXEC=$(pwd)/venv/bin/python" >> $GITHUB_ENV
        shell: bash

      - name: 📚 Install build dependencies
        run: |
          $PYTHON_EXEC -m pip install --upgrade pip
          $PYTHON_EXEC -m pip install build
        shell: bash

      - name: 🏗️ Build wheel (release mode)
        run: |
          $PYTHON_EXEC -m build --wheel
        shell: bash

      - name: ⬆️ Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/*.whl
          retention-days: 3

  package-artifacts:
    name: Package all wheels into one zip
    needs: build-wheels
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: collected
          merge-multiple: true

      - name: 📦 Bundle all wheels
        run: |
          mkdir -p packaged
          zip -j packaged/buildkit-all-wheels.zip collected/*
        shell: bash

      - name: ⬆️ Upload final packaged zip
        uses: actions/upload-artifact@v4
        with:
          name: buildkit-packaged
          path: packaged/*
          retention-days: 3

  publish-release:
    name: Publish wheels to latest release
    needs:
      - build-wheels
      - package-artifacts
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Download packaged artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_artifacts
          merge-multiple: true

      - name: 🚀 Upload wheel assets to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: Latest Build
          draft: false
          prerelease: false
          files: |
            release_artifacts/**/*.whl
            release_artifacts/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
